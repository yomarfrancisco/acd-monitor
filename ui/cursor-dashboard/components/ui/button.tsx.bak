import * as React from "react";

type Size = "sm" | "md" | "lg" | "icon";
type Variant = "default" | "outline" | "ghost";

export type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {
  variant?: Variant;
  size?: Size;
};

export function buttonVariants(variant: Variant = "default", size: Size = "md") {
  const base =
    "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors disabled:opacity-50 disabled:pointer-events-none";
  const variants: Record<Variant, string> = {
    default: "bg-white/10 hover:bg-white/20 border border-white/10",
    outline: "border border-white/20 hover:bg-white/5",
    ghost: "hover:bg-white/5",
  };
  const sizes: Record<Size, string> = {
    sm: "h-8 px-2 text-xs",
    md: "h-9 px-3 text-sm",
    lg: "h-10 px-4 text-base",
    icon: "h-9 w-9 p-0", // square icon button
  };
  return [base, variants[variant], sizes[size]].join(" ");
}

export function Button({ className, variant = "default", size = "md", ...props }: ButtonProps) {
  return (
    <button
      className={[buttonVariants(variant, size), className].filter(Boolean).join(" ")}
      {...props}
    />
  );
}

export default Button;
