name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # Stable imports in CI
      PYTHONPATH: ${{ github.workspace }}:${{ github.workspace }}/src
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Show environment
        run: |
          python -V
          pip -V
          python - <<'PY'
          import sys, platform, os
          print("platform:", platform.platform())
          print("cwd:", os.getcwd())
          print("PYTHONPATH:", os.environ.get("PYTHONPATH"))
          print("sys.path[0:5]:", sys.path[:5])
          PY
          echo "Repo tree (top-level):"
          ls -la
          echo "src tree:"
          find src -maxdepth 2 -type f | sort

      - name: Install deps
        run: |
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Lint with flake8
        run: flake8

      - name: Format check with black
        run: black --check src tests

      - name: Pytest collect-only (debug)
        if: always()
        shell: bash
        run: |
          set +e
          pytest --collect-only -q 2>&1 | tee collect.log
          exit 0

      - name: Run tests with pytest (verbose, keep logs)
        shell: bash
        continue-on-error: true
        run: |
          set -o pipefail
          # run tests, tee logs
          pytest -vv --maxfail=5 --disable-warnings --cov=src --cov-report=xml:coverage.xml 2>&1 | tee pytest.log
          # record pytest exit code even when we continue-on-error
          echo "${PIPESTATUS[0]}" > pytest_exit_code.txt
          ls -l pytest.log pytest_exit_code.txt || true

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-debug-logs
          path: |
            pytest.log
            pytest_exit_code.txt
            coverage.xml
          retention-days: 7
          if-no-files-found: warn

      - name: Fail job if tests failed
        if: always()
        shell: bash
        run: |
          # default to 0 if file is missing (defensive)
          exit_code=$(cat pytest_exit_code.txt 2>/dev/null || echo 0)
          if [ "$exit_code" -ne 0 ]; then
            echo "Tests failed with exit code $exit_code (see artifact: ci-debug-logs/pytest.log)."
            exit "$exit_code"
          else
            echo "Tests passed."
          fi

      - name: Upload coverage to Codecov
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
