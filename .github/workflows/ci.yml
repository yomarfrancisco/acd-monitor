name: ci

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'baseline/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - 'feature/**'
      - 'baseline/**'
      - 'fix/**'
  workflow_dispatch:

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      ui: ${{ steps.filter.outputs.ui }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changed areas
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ui:
              - 'ui/**'
              - 'package.json'
              - 'package-lock.json'
            backend:
              - 'src/**'
              - 'tests/**'
              - 'schemas/**'
              - 'scripts/**'
              - 'openapi/**'
              - '.flake8'
              - 'pyproject.toml'
              - 'setup.cfg'

  ui:
    needs: detect
    if: needs.detect.outputs.ui == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.0
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: |
            pnpm-lock.yaml

      - name: Install deps (workspace)
        run: pnpm install --frozen-lockfile=false

      - name: Install UI package deps
        run: pnpm --filter ./ui/cursor-dashboard install --frozen-lockfile=false

      - name: Verify UI deps
        run: pnpm --filter ./ui/cursor-dashboard ls zod react react-dom || true

      - name: Typecheck
        run: pnpm --filter ./ui/cursor-dashboard run typecheck

      - name: Build
        run: pnpm --filter ./ui/cursor-dashboard run build

      - name: Verify static assets
        run: pnpm --filter ./ui/cursor-dashboard run verify

  backend:
    needs: detect
    if: needs.detect.outputs.backend == 'true'
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}:${{ github.workspace }}/src
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Lint with flake8
        run: flake8

      - name: Format check with black
        run: black --check src tests
