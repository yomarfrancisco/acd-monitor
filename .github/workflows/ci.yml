name: ci

on:
  push:
    branches:
      - main
      - feat/**      # run CI on feature branches too
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      ui: ${{ steps.filter.outputs.ui }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changed areas
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ui:
              - 'ui/**'
              - 'package.json'
              - 'package-lock.json'
            backend:
              - 'src/**'
              - 'tests/**'
              - 'schemas/**'
              - 'scripts/**'
              - 'openapi/**'
              - '.flake8'
              - 'pyproject.toml'
              - 'setup.cfg'

  ui:
    needs: detect
    if: needs.detect.outputs.ui == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Install deps
      - name: Install deps (ci with fallback)
        run: |
          npm ci || npm install

      # Typecheck
      - name: Typecheck
        run: npx tsc --noEmit

      # Build Next app
      - name: Build
        working-directory: ui/cursor-dashboard
        run: |
          npm ci || npm install
          npm run build

      # Start server & wait
      - name: Start app and wait
        working-directory: ui/cursor-dashboard
        run: |
          npm run start -- -p 3000 &
          npx wait-on http://localhost:3000

      # Install Playwright browsers
      - name: Install Playwright
        run: npx playwright install --with-deps

      # Run E2E
      - name: Run E2E tests
        working-directory: ui/cursor-dashboard
        run: npx playwright test

  backend:
    needs: detect
    if: needs.detect.outputs.backend == 'true'
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}:${{ github.workspace }}/src
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Lint with flake8
        run: flake8

      - name: Format check with black
        run: black --check src tests